<h1>PS2: Basics Part II</h1>
<hr>
<ol>
    <% if flash[:notice] %>
        <div class="notice" style="color:blue;"><%= flash[:notice] %></div>
    <% end %>

    <li>
        <a href="/ps2/quotation">Quotations</a>
        <ul>


            <li>
            <%= link_to "export to xml",{ :action => :export, :file_type => "xml" }, :target => :_blank %>
            </li>
            <li>
            <%= link_to "export to json",{ :action => :export, :file_type => "json"}, :target => :_blank%>
            </li>
            <li>
            <%= form_with(url: "/ps2/import", method: "post", local:true) do |form| %>
                <%= form.file_field :import_file  %> <br>
                <%= form.submit "import quotations"%>
            <% end %>
            </li>
        </ul>

        <h4>Implementation Details</h4>

    </li>

    <li>
        <ul>
            <li> <%= link_to 'Data base session', '/stock.txt' -%> </li>

            <li> <%= link_to 'Detail data', '/detail_stock.txt' -%> </li>

            <li> <%= link_to 'SQL File', '/ps2_psql.sql' -%> </li>
        </ul>
        <h4>Implementation Details</h4>

        <p>
          The questions, which involve pure SQL is as follows; first,the datas was copied from a text file to database by called the
'\copy mytable FROM '/path of file' WITH delimiter E'\t';'. The texts will be added in each column into a table according to type of the column of the table.
Then, inserting data which unique information into stock_prices table by used the 'INSERT INTO mytable SELECT DISTINCT ON column1, column2, ... FROM mytable2 ;'.
The DISTINCT ON() can specify the column by 'DISTINCT ON (column1) column1, column2, ... ' . Likewise,inserting a half of data to another table by
'INSERT INTO table1 SELECT * FROM table2 limit (SELECT COUNT(field_in_table2 [e.g.id])/2 FROM table1 );' . The limit() can used for litmit the data which was inserted to others;
for example , the 'limit (5);' is inserting 5 rows of datas. The Regexp_split_to_array() function was used to obtain individual characters of string which are looped over .
In addition, ASCII() function was used to found the ASCII values of each characters.After then, The cursor loop was used to fetch the data which is used to sum the value.
A view was created by 'CREATE VIEW name_view AS SELECT * FROM mytable' ;

        </p>

    </li>

</ol>
